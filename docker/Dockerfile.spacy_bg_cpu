# The image tagged with the 'spacy-bg' suffix
ARG IMAGE_BASE_NAME=rasa/rasa
ARG BASE_IMAGE_HASH=0fe25c12832040158b31572fa51170b75fd71dc0af8344ec2f5188f322afff78
ARG BASE_BUILDER_IMAGE_HASH=3c37301fb584c651acd49f7b8f3eb674623138491ff7641c5bf591f80412ff77

FROM ${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder

# copy files
COPY . /build/
COPY docker/configs/config_spacy_bg.yaml /build/config.yml

# change working directory
WORKDIR /build

# install dependencies
RUN python -m venv /opt/venv && \
    . /opt/venv/bin/activate && pip install --no-cache-dir -U 'pip<20'
RUN . /opt/venv/bin/activate && poetry install --extras spacy --no-dev --no-root --no-interaction
RUN . /opt/venv/bin/activate && poetry build -f wheel -n && \
    pip install --no-deps dist/*.whl && \
    rm -rf dist *.egg-info

RUN apt install git-lfs && \
    git lfs install && \
    git clone https://huggingface.co/iarfmoose/roberta-small-bulgarian /var/models/roberta-small-bulgarian

RUN . /opt/venv/bin/activate && pip install rasa[transformers]
# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

#RUN python -m spacy init fill-config docker/spacy-training/bg_config_cpu.cfg config.cfg
#RUN mkdir corpus && ls -la && ls -la corpus && \
#    echo ------------------------------------------------- && \
#    cat config.cfg && \
#    echo ------------------------------------------------- && \
#    python -m spacy train config.cfg

# start a new build stage
FROM ${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner

# copy everything from /opt
COPY --from=builder /opt/venv /opt/venv
COPY --from=builder /var/models /var/models

# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

# update permissions & change user to not run as root
WORKDIR /app
RUN chgrp -R 0 /app && chmod -R g=u /app && \
    . /opt/venv/bin/activate && pip install transformers --upgrade
USER 1001

# Create a volume for temporary data
VOLUME /tmp

# change shell
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# the entry point
EXPOSE 5005
ENTRYPOINT ["rasa"]
CMD ["--help"]
